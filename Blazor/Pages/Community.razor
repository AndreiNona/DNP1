@page "/Community"
@using Entities
@using Contracts
@inject IUserService UserServe
@inject NavigationManager NavMgr
<PageTitle>Comunity</PageTitle>
<h3>Comunity</h3>

<AuthorizeView>
    <Authorized>

        @if (users == null)
        {
            <p>
                <em>Loading...</em>
            </p>
        }
        else if (!users.Any())
        {
            <p>
                <em>Nobody here, please find some friends.</em>
            </p>
        }
        else
        {
    
            <table class="table">
                <thead>
                <tr>
                    <th>Account name</th> <th>Username</th> <th>Role</th> <th>Password</th> <th>ID</th>
                </tr>
                </thead>
                <tbody>
                @foreach (User u in users)
                {
                    <tr>
                        <td>@u.accountName</td> 
                        <td>@u.username</td> 
                        <td>@u.role</td>
                        <td>@u.password</td>
                        <td id="UserID">@u.id</td>
                        <!--<td><button @onclick="()=>RemoveUser(u.id)">X</button></td>-->
                    </tr>
                }
                </tbody>
            </table>
        }

    </Authorized>
            <NotAuthorized>
                <h2>Please Login to see this page</h2>
            </NotAuthorized>
</AuthorizeView>
@code {
    
    private ICollection<User> users;

    protected override async Task OnInitializedAsync()
    {
        users = await UserServe.GetAsync();
    }
    private void RemoveUser(int id)
    {
        Console.WriteLine("Deleting user with id "+id);
        UserServe.DeleteAsync(id);
        NavMgr.NavigateTo($"/Community");
    }
}